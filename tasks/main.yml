---
# tasks file for go
- name: create lib64 directory
  file:
    path: /lib64
    state: directory
  when:
    - ansible_distribution == "Alpine"

- name: link libc to lib64 directory
  file:
    src: /lib/libc.musl-x86_64.so.1
    dest: /lib64/ld-linux-x86-64.so.2
    state: link
  when:
    - ansible_distribution == "Alpine"

- name: install requirements
  package:
    name: "{{ go_requirements }}"
    state: present
  register: go_install_requirements
  until: go_install_requirements is succeeded
  retries: 3

- name: unpack go
  unarchive:
    src: "{{ go_src }}"
    dest: "{{ go_destination }}"
    remote_src: yes
    creates: "{{ go_destination }}/go/bin"
  register: go_unpack_go
  until: go_unpack_go is succeeded
  retries: 3

- name: add go_destination to path variable
  template:
    src: go.sh.j2
    dest: "/etc/profile.d/{{ item }}"
    mode: '0644'
  with_items:
    - go.sh
    - go.csh

- name: link go to a location in PATH
  file:
    src: "{{ go_destination }}/go/bin/go"
    dest: /usr/bin/go
    state: link

- name: create go_path bin directory
  file:
    path: "{{ go_path }}/bin"
    state: directory
  when:
    - go_packages is defined

- name: get requested packages
  command: "go get {{ item }}"
  args:
    creates: "{{ go_path }}/src/{{ item }}"
  with_items:
    - "{{ go_packages }}"
  when:
    - go_packages is defined
  environment:
    GOPATH: "{{ go_path }}"

- name: install requested packages
  command: make install
  args:
    chdir: "{{ go_path }}/src/{{ item }}"
    creates: "{{ go_path }}/bin/{{ item | basename }}"
  with_items:
    - "{{ go_packages }}"
  when:
    - go_packages is defined
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ go_destination }}/go/bin"
